function [Rsq slope] = qPCR_PP7_Regression(qPCR_Transgene_norm,FluoAccmRNA_normData)


% PP7INTEGRATEDFLUODATA a two dimensional array of replicates x timepoints
% containing the integrated mRNA infered from integrated spot fluorescence
% and an assumed degradation rate. Normalized to t=60min. This gets generated by
% plotMeanAccumulatedmRNA.

% TRANSGENENORMQPCRDATA a two dimensional array of replicates x timepoints
% containing the mRNA abundance of the PP7 transgene as measured by qPCR 
% normalized to t=60 min. It gets generated by plotRTqPCRResults

%% calculate regression 

% PP7 data will be on the X, qPCR on the Y. 
meanY = nanmean(qPCR_Transgene_norm);
meanX = nanmean(FluoAccmRNA_normData);
meanX(1) = 0; %this should be 0 from previous functions. fix later

ErrorY = nanstd(qPCR_Transgene_norm)./sqrt(size(qPCR_Transgene_norm,1));
ErrorX = nanstd(FluoAccmRNA_normData)./sqrt(size(FluoAccmRNA_normData,1));
ErrorX(1) = 0; %this should be 0 from previous functions. fix later

slope = meanX(:)\meanY(:); % linear regression throug origin
yfit = meanX(:)*slope; % calculate fitted line

% calculate R2          
f = yfit;
Bbar = mean(meanX');
SStot = sum((meanX' - Bbar).^2);
SSreg = sum((f - Bbar).^2);
SSres = sum((meanX' - f).^2);
R2 = 1 - SSres/SStot;
R = corrcoef(meanY,meanX');
Rsq = R(1,2).^2;

%% plot results
figure
hold on
% plot the fit results
plot(meanX,yfit,'k-','LineWidth',1)

% double error bar, microscopy on the x, qPCR on the y
errorbar(meanX,meanY,ErrorX,'b.','horizontal','CapSize',0,'LineWidth',2)
errorbar(meanX,meanY,ErrorY,'r.','CapSize',0,'LineWidth',2)

% plot the center of the double errorbars
plot(meanX,meanY,'ko','MarkerSize',8,'MarkerFaceColor','w')
LabelsForPoints = {'0','5','10','15','30','60'}; % time (min) at 38C.
labelpoints(meanX,meanY,LabelsForPoints,'NW',1,0.6)
hold off
xlabel('microscopy')
ylabel('RT-qPCR')
title(['R^2 = ' num2str(Rsq) ' ; slope through origin = ' num2str(slope)])








% 
% % convert each data array into a vector
% XdataVector = transgeneNormqPCRData(:);
% YdataVector = PP7IntegratedFluoData(:);
% 
% regX = [ones(size(XdataVector)) XdataVector];% the padding with ones is needed for the thing to run
% [b,bint,r,rint,stats] = regress(YdataVector,regX);
% slope = b(2);
% minslope = bint(2,2) ; % top of 95% confidence interval
% maxslope = bint (2,1);% bottom of 95% confidence interval
% Yintersect = b(1);
% Rsquared = stats(1);
% 
% % plot the fit results
% plot(XdataVector,Yintersect+XdataVector*slope,'k-','LineWidth',1)
% 
% % plot double errorbars on top
% % calculate the mean and the SE of each data array
% 
% Xmean = nanmean(PP7IntegratedFluoData);
% XError = nanstd(PP7IntegratedFluoData)/sqrt(size(AccmRNA_normData,a));
% 
% Ymean = nanmean(transgeneNormqPCRData);
% YError = nanstd(transgeneNormqPCRData)/sqrt(size(AccmRNA_normData,1));
% 
% LabelsForPoints = {'0','5','10','15','30','60'};
% % double error bar, fluorescence on the x, qPCR on the y
% errorbar(Xmean,Ymean,XError,'b.','horizontal','CapSize',0,'LineWidth',2)
% errorbar(Xmean,Ymean,YError,'r.','CapSize',0,'LineWidth',2)
% % plot the center of the double errorbars
% plot(Xmean,Ymean,'ko','MarkerSize',8,'MarkerFaceColor','w')
% labelpoints(Xmean,Ymean,LabelsForPoints,'NW',1,0.6)
% 
% 
% 
% 
